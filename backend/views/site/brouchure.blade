@section("js_pos")
    <script type="text/babel">

        const App = () => {

            const [fileList, setFileList] = useState([]);

            const handleChange = (file) => {
                try {
                    onUploadMedia(file, (response) => {
                        if (response.name !== "Exception") {
                            const file = {
                                uid: response.id,
                                percent: 50,
                                name: response.name,
                                status: 'done',
                                url: `/static${response.path}`
                            }
                            setFileList([...fileList, file]);
                        }

                    }, null, null, 'brochure');
                    return true;
                } catch (e) {
                    console.log("e", e)
                }
            };
            const onRemove = async (image) => {
                try {
                    await Server.delete(`/brochure/delete?id=${image.uid}`);
                } catch (e) {
                    console.log("E", e)
                }
                await getFileList();
            }
            const getFileList = async () => {
                try {
                    const response = await Server.get('/brochure');
                    const items = response.data.map((item) => {
                        return {
                            uid: item.id,
                            percent: 100,
                            name: item.name,
                            status: 'done',
                            url: `/static${item.path}`
                        }
                    });
                    console.log("ITEM", items)
                    setFileList(items);
                } catch (e) {
                    console.log("E", e)
                }
            }
            useEffect(() => {
                getFileList();
            }, []);


            return <div>
                <Space direction="vertical">
                    <small>#Trước khi upload ảnh Brochure thực hiện 2 bước sau để tối ưu tốc độ website</small>
                    <small>* Chuyển đổi PDF sang dạng JPG tại : <a target="_blank" href="https://smallpdf.com/vi/pdf-to-jpg">smallpdf</a></small>
                    <small>* Tối ưu hình ảnh làm nhẹ website tại  : <a target="_blank" href="https://tinypng.com/">tinypng.com</a></small>
                </Space>

                <Upload
                    customRequest={async ({file, onSuccess}) => onSuccess('ok')}
                    listType="picture-card"
                    fileList={fileList}
                    onRemove={onRemove}
                    beforeUpload={handleChange}
                        //  onChange={(props) => handleChange(props)}
                >
                    upload
                </Upload>
            </div>
        };
    </script>
@stop
