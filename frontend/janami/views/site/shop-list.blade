<?php

use common\helper\HelperFunction;
use yii\widgets\ListView;
$view->title = $model ? $model->name : 'Shop';
?>
<?php $view->beginBlock('schema') ?>
<?= $view->render('schema.blade', [
    'type' => 'Product List',
    'name' => $model->name ?? 'Shop list',
    'url' => HelperFunction::currentURL()
])?>
<?php $view->endBlock()?>
@section('content')

    <?= $view->render('../parts/slider.blade') ?>
    <div class="container">
        <div id="breadcrumb">
            <div class="row">
                <div class="col-12">
                    <div class="breadcrumb-nav">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
                                <li class="breadcrumb-item"><a href="/shop">Sản phẩm</a></li>
                                <li class="breadcrumb-item active" aria-current="page">{!! $view->title !!}</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <section class="bg-color-01 services-section division">
            <div class="sbox-18-wrapper" id="product-page"></div>
            <?= $view->render('../parts/logo.blade') ?>
        </section>
    </div>

@stop

@section('js_end')
    <script type="text/babel">

        const ProductList = () => {

            const [products, setProducts] = useState([]);
            const [paginate, setPaginate] = useState(null);
            const [isLoading, setLoading] = useState(false);
            const fetchProducts = async (params = {}) => {
                try {
                    setLoading(true);
                    const response = await getProduct({
                        ...params,
                        per_page: 12
                    });
                    setProducts(response.data);
                    setPaginate(response.pagination);
                    setLoading(false);
                } catch (e) {
                    message.error(e.message);
                }
            }
            useEffect(() => {
                fetchProducts();
            }, [])

            return (
                <div className={'other-product'}>
                    <Spin spinning={isLoading}>
                        <div className="row">
                            {products.length > 0 && products.map((item, key) => {
                                return (
                                    <div key={key} className="col-md-3 col-12">
                                        <div className="block-product">
                                            <div className="img">
                                                <img className="img-fluid" src={item.avatar}/>
                                                <div className="action">
                                                    <a href={`/shop/${item.defaultArchive.slug}/${item.slug}`}
                                                       className="btn-action"><i className="fas xam fa-plus"/>
                                                        <span className={'tool-tip'}>Xem chi tiết</span>
                                                    </a>
                                                </div>
                                            </div>
                                            <div className="text">
                                                <a href={`/shop/${item.defaultArchive.slug}/${item.slug}`}
                                                   className="title">{item.name}</a>
                                                <p className="price">{renderPrice(item)}</p>
                                            </div>
                                        </div>
                                    </div>
                                )
                            })}
                        </div>
                    </Spin>
                    {paginate ? renderPaginate(paginate, fetchProducts) : null}
                </div>
            )
        }
        ReactDOM.render(<ProductList/>, document.getElementById('product-page'));
    </script>
@stop
